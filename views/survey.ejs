<%- include('partials/header') %>

<div class="container">
  <div class="form-container">
    <h1>Complaint Handling Survey</h1>
    <p style="color: var(--text-light); margin-bottom: 2rem;">
      Please take a few minutes to complete this survey. All fields marked with <span class="required">*</span> are required.
    </p>

    <% if (typeof error !== 'undefined' && error) { %>
      <div class="error-message" style="background-color: #fee; padding: 1rem; border-radius: 0.375rem; margin-bottom: 1rem;">
        <%= error %>
      </div>
    <% } %>

    <form action="/survey/submit" method="POST" id="surveyForm">
      <% 
        let basicQuestions = questions.filter(q => q.category === 'basic');
        let otherQuestions = questions.filter(q => q.category !== 'basic');
      %>

       Basic Information Section 
      <% if (basicQuestions.length > 0) { %>
        <div class="card" style="margin-bottom: 2rem;">
          <h2 class="card-title">Basic Information</h2>

          <% 
            const deptQ = basicQuestions.find(q => q.questionType === 'dropdown' && q.questionText.toLowerCase().includes('department'));
            const nameQ = basicQuestions.find(q => q.questionType === 'dropdown' && q.questionText.toLowerCase().includes('name') && !q.questionText.toLowerCase().includes('store'));
          %>

           Render Department ABOVE Name with fixed option list 
          <% if (deptQ) { %>
            <div class="form-group">
              <label for="departmentSelect">
                Department
                <% if (deptQ.required) { %><span class="required">*</span><% } %>
              </label>
              <select 
                id="departmentSelect" 
                name="department"
                <%= deptQ.required ? 'required' : '' %>
              >
                <option value="">-- Select Department --</option>
                 Department options from updated requirements 
                <option value="IT">IT</option>
                <option value="Other">Other</option>
                <option value="Marketing">Marketing</option>
                <option value="Franchise Project">Franchise Project</option>
                <option value="Finance">Finance</option>
                <option value="Product Quality">Product Quality</option>
                <option value="KMR">KMR</option>
                <option value="Management">Management</option>
                <option value="Dispatch">Dispatch</option>
              </select>
            </div>
          <% } %>

           Render Name (disabled until Department selected). Options are filled dynamically 
          <% if (nameQ) { %>
            <div class="form-group">
              <label for="employeeNameSelect">
                Name
                <% if (nameQ.required) { %><span class="required">*</span><% } %>
              </label>
              <select 
                id="employeeNameSelect" 
                name="employeeName"
                data-required="<%= nameQ.required ? 'true' : 'false' %>"
                disabled
              >
                <option value="">-- Select Name --</option>
              </select>
            </div>
          <% } %>

          <% 
            basicQuestions.forEach((question) => { 
              const isDept = question.questionText.toLowerCase().includes('department');
              const isEmpName = question.questionText.toLowerCase().includes('name') && !question.questionText.toLowerCase().includes('store');
              if (isDept || isEmpName) { return; }
          %>
            <div class="form-group">
              <label for="<%= question._id %>">
                <%= question.questionText %>
                <% if (question.required) { %><span class="required">*</span><% } %>
              </label>

              <% if (question.questionType === 'text') { %>
                <% 
                  let fieldName = 'question_' + question._id;
                  if (question.questionText.toLowerCase().includes('store name')) fieldName = 'storeName';
                  if (question.questionText.toLowerCase().includes('store code')) fieldName = 'storeCode';
                  if (question.questionText.toLowerCase().includes('email')) fieldName = 'email';
                %>
                <input 
                  type="<%= question.questionText.toLowerCase().includes('email') ? 'email' : 'text' %>" 
                  id="<%= question._id %>" 
                  name="<%= fieldName %>"
                  <%= question.required ? 'required' : '' %>
                >
              <% } else if (question.questionType === 'dropdown') { %>
                <% 
                  // For non-Department/Name dropdowns, keep default rendering
                  let fieldName = 'question_' + question._id;
                %>
                <select 
                  id="<%= question._id %>" 
                  name="<%= fieldName %>"
                  <%= question.required ? 'required' : '' %>
                >
                  <option value="">-- Select --</option>
                  <% question.options.forEach((option) => { %>
                    <option value="<%= option %>"><%= option %></option>
                  <% }) %>
                </select>
              <% } %>
            </div>
          <% }) %>
        </div>
      <% } %>

       Survey Questions 
      <% if (otherQuestions.length > 0) { %>
        <div class="card" style="margin-bottom: 2rem;">
          <h2 class="card-title">Survey Questions</h2>
          
          <% otherQuestions.forEach((question, index) => { %>
            <div class="form-group">
              <label>
                <strong>Q<%= index + 1 %>.</strong> <%= question.questionText %>
                <% if (question.required) { %><span class="required">*</span><% } %>
              </label>

              <% if (question.questionType === 'text') { %>
                <input 
                  type="text" 
                  name="question_<%= question._id %>"
                  <%= question.required ? 'required' : '' %>
                >

              <% } else if (question.questionType === 'textarea') { %>
                <textarea 
                  name="question_<%= question._id %>"
                  <%= question.required ? 'required' : '' %>
                ></textarea>

              <% } else if (question.questionType === 'radio') { %>
                <div class="radio-group">
                  <% question.options.forEach((option) => { %>
                    <div class="radio-option">
                      <input 
                        type="radio" 
                        id="<%= question._id %>_<%= option.replace(/\s+/g, '_') %>" 
                        name="question_<%= question._id %>"
                        value="<%= option %>"
                        <%= question.required ? 'required' : '' %>
                        <% if (question.hasFollowUp) { %>
                          onchange="toggleFollowUp('<%= question._id %>', '<%= question.followUpCondition %>', this.value)"
                        <% } %>
                      >
                      <label for="<%= question._id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                    </div>
                  <% }) %>
                </div>

                 Follow-up question if applicable 
                <% if (question.hasFollowUp && question.followUpQuestion) { %>
                  <div id="followup_<%= question._id %>" style="display: none; margin-top: 1rem;">
                    <label><%= question.followUpQuestion %></label>
                    <input type="text" name="followup_<%= question._id %>">
                  </div>
                <% } %>

              <% } else if (question.questionType === 'checkbox') { %>
                <div class="radio-group">
                  <% question.options.forEach((option) => { %>
                    <div class="radio-option">
                      <input 
                        type="checkbox" 
                        id="<%= question._id %>_<%= option.replace(/\s+/g, '_') %>" 
                        name="question_<%= question._id %>"
                        value="<%= option %>"
                      >
                      <label for="<%= question._id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                    </div>
                  <% }) %>
                </div>

              <% } else if (question.questionType === 'dropdown') { %>
                <select 
                  name="question_<%= question._id %>"
                  <%= question.required ? 'required' : '' %>
                >
                  <option value="">-- Select --</option>
                  <% question.options.forEach((option) => { %>
                    <option value="<%= option %>"><%= option %></option>
                  <% }) %>
                </select>
              <% } %>
            </div>
          <% }) %>
        </div>
      <% } %>

      <div style="display: flex; gap: 1rem; justify-content: center;">
        <button type="submit" class="btn btn-primary">Submit Survey</button>
        <a href="/" class="btn btn-secondary">Cancel</a>
      </div>
    </form>
  </div>
</div>

<script>
  function toggleFollowUp(questionId, condition, selectedValue) {
    const followUpDiv = document.getElementById('followup_' + questionId);
    if (followUpDiv) {
      if (selectedValue === condition) {
        followUpDiv.style.display = 'block';
      } else {
        followUpDiv.style.display = 'none';
        // Clear the follow-up input when hidden
        const followUpInput = followUpDiv.querySelector('input');
        if (followUpInput) {
          followUpInput.value = '';
        }
      }
    }
  }

  // Form validation
  document.getElementById('surveyForm').addEventListener('submit', function(e) {
    const requiredFields = this.querySelectorAll('[required]');
    let isValid = true;

    requiredFields.forEach(field => {
      if (field.disabled) {
        return; // skip disabled required controls
      }
      // Handle checkbox groups
      if (field.type === 'checkbox') {
        const checkboxGroup = this.querySelectorAll(`input[name="${field.name}"]`);
        const isChecked = Array.from(checkboxGroup).some(cb => cb.checked);
        if (!isChecked) {
          isValid = false;
          checkboxGroup[0].parentElement.parentElement.style.borderLeft = '3px solid var(--danger)';
        } else {
          checkboxGroup[0].parentElement.parentElement.style.borderLeft = 'none';
        }
      } else if (!field.value || (typeof field.value === 'string' && !field.value.trim())) {
        isValid = false;
        field.style.borderColor = 'var(--danger)';
      } else {
        field.style.borderColor = 'var(--border)';
      }
    });

    if (!isValid) {
      e.preventDefault();
      alert('Please fill in all required fields');
    }
  });

  (function() {
    const deptToUsers = {
      "IT": [
        "Gauri Gaikwad","chintan","Sumit Deorepatil","Dipak","Kimaya Mandavkar","Pooja Kandu","Smira Kule","POS Support","Dipali Yesade","Shrushti"
      ],
      "Other": [
        "Khagesh","samadhan","Prashant Tiwari","Gajanand Sanganti","Rishi","Pankil Padharia","Prathamesh Naik","Jotiba Jagtap","Sanket Dumbre","Mitali Vaishnav","Jay Naik","Vikrant","Bhavesh Nakrani","Deniel","Girish","Hardik","Anuradha Mishra","Shilpa","ashish.p","franchisedispatch","umangb"
      ],
      "Marketing": [
        "Ranjeet Kumar","Hitesh Kudikyala","Mayuresh Kalambe"
      ],
      "Franchise Project": [
        "Chandresh Gor","Mayur Chauhan","Saideep Mokal","Sanket Lakhani","Mayur Bhalala","Alpesh Dholakiya","Janak Parikhiya"
      ],
      "Finance": [
        "Kinjal Soni"
      ],
      "Product Quality": [
        "Mehul Soni","Pradeep Maurya","Nikhil Mahyavanshi","Senda Bhai","ruchi.k"
      ],
      "KMR": [
        "Vicky"
      ],
      "Management": [
        "Chethan Suvarna"
      ],
      "Dispatch": [
        "Dharmesh Rajani"
      ]
    };

    const deptSelect = document.getElementById('departmentSelect');
    const nameSelect = document.getElementById('employeeNameSelect');

    if (deptSelect && nameSelect) {
      const isNameRequired = nameSelect.getAttribute('data-required') === 'true';

      function resetNames() {
        nameSelect.innerHTML = '';
        const def = document.createElement('option');
        def.value = '';
        def.textContent = '-- Select Name --';
        nameSelect.appendChild(def);
      }

      function populateNamesForDepartment(dept) {
        resetNames();
        if (dept && deptToUsers[dept]) {
          const names = deptToUsers[dept];
          names.forEach(n => {
            const opt = document.createElement('option');
            opt.value = n;
            opt.textContent = n;
            nameSelect.appendChild(opt);
          });
          nameSelect.disabled = false;
          if (isNameRequired) nameSelect.setAttribute('required', '');
        } else {
          nameSelect.disabled = true;
          nameSelect.removeAttribute('required');
        }
      }

      // Initialize on load (covers pre-filled cases)
      populateNamesForDepartment(deptSelect.value);

      // Change handler
      deptSelect.addEventListener('change', function() {
        populateNamesForDepartment(this.value);
      });
    }
  })();
</script>

<%- include('partials/footer') %>
